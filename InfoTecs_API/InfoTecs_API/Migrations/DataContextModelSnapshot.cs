// <auto-generated />
using System;
using InfoTecs_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InfoTecs_API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InfoTecs_API.Models.CSV_File", b =>
                {
                    b.Property<Guid>("file_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("file_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("file_id");

                    b.ToTable("files");
                });

            modelBuilder.Entity("InfoTecs_API.Models.Result", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("All_Time")
                        .HasColumnType("integer");

                    b.Property<double>("Average_Indicator")
                        .HasColumnType("double precision");

                    b.Property<int>("Average_Time")
                        .HasColumnType("integer");

                    b.Property<double>("Maximum_Indicator")
                        .HasColumnType("double precision");

                    b.Property<double>("Median_Indicator")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Minimum_Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Minimum_Indicator")
                        .HasColumnType("double precision");

                    b.Property<int>("Row_Numbers")
                        .HasColumnType("integer");

                    b.Property<Guid>("file_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("results");
                });

            modelBuilder.Entity("InfoTecs_API.Models.value", b =>
                {
                    b.Property<Guid>("value_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DateAndTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateAndTime1")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("File_Id")
                        .HasColumnType("uuid");

                    b.Property<double>("FloatingPointIndicator")
                        .HasColumnType("double precision");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("IntegerTimeValue")
                        .HasColumnType("integer");

                    b.HasKey("value_id");

                    b.ToTable("values");
                });
#pragma warning restore 612, 618
        }
    }
}
