// <auto-generated />
using System;
using InfoTecs_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InfoTecs_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240210002417_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InfoTecs_API.Models.CSV_File", b =>
                {
                    b.Property<Guid>("file_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("file_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("file_id");

                    b.ToTable("files");
                });

            modelBuilder.Entity("InfoTecs_API.Models.value", b =>
                {
                    b.Property<Guid>("value_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DateAndTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateAndTime1")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("File_Id")
                        .HasColumnType("uuid");

                    b.Property<double>("FloatingPointIndicator")
                        .HasColumnType("double precision");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("IntegerTimeValue")
                        .HasColumnType("integer");

                    b.HasKey("value_id");

                    b.ToTable("values");
                });
#pragma warning restore 612, 618
        }
    }
}
